name: Go

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.25.x', '1.24.x', '1.23.x', '1.22.x' ]
    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get Dependencies
      run: go mod download

    - name: Test
      run: go test -v ./...

    - name: Coverage Dependencies
      if: matrix.go == '1.25.x'
      run: go install github.com/mattn/goveralls@latest

    - name: Coverage Reporting Generation
      if: matrix.go == '1.25.x'
      run: |
        export PKGS=$(go list ./... | grep -vE "(gotests/gotests|.*data|templates)" | tr -s '\n' ',' | sed 's/.\{1\}$//')
        go test -v -covermode=count -coverpkg=$PKGS -coverprofile=coverage.out ./...

    - name: Upload coverage to Coveralls
      if: matrix.go == '1.25.x'
      run: goveralls -coverprofile=coverage.out -service=github
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload coverage to Codecov
      if: matrix.go == '1.25.x'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.out
        fail_ci_if_error: false
        verbose: true
